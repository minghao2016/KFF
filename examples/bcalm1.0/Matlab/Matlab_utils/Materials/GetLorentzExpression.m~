%% Makes all the needed strings to be inserted in the fit algoritm
%% np is the pole number

%% We assume that we first apply matlab "fit" function on the real part and
%% then on the complex part.
%% The output is:
%% - res.expr Expression of the lorentz permittivity.
%% - res.coeff Expression of the coefficients to be optimized
%% - res.problem Expression of the problem dependent variables within
%% res.expr
%% - res.problemval Numberical value of the problem dependent variables
%% - res.startval Numerical value of the startvalue of the the problem
%% dependent variables
%% if param(1)=1 then wp(np) is calculated for a fitted of pole np
%% if param(2)=1 then w(np) is calculated for a fitted of pole np
%% if param(3)=1 then G(np) is calculated for a fitted of pole np


%% F0m1 is the result of the previous fit. if complex=1 for the same number
%% of poles and for np-1 number of poles if complex=0;
%% Startpoint are the starting points of pole np to be optimized (respect
%% param order)
%% Problem are the values of the parameters of pole np not to be optimized


function res=GetLorentzExpression(np,param,startpoint,problem,F0m1)

res.expr=['1'];
temp=[];


% Calculate the expression
for cnt =(1:np)
    p=sprintf('%d',cnt);
    res.expr=sprintf('%s + (Wp%d)^2/(W%d^2-W^2+1i*W*G%d)',res.expr,cnt,cnt,cnt);
    temp=[temp,{sprintf('Wp%d',cnt)},{sprintf('W%d',cnt)},{sprintf('G%d',cnt)}];
end

% Which variables need to be fitted.
tofit=zeros(size(temp));
% Real part is optimized
if param(1)
    tofit(end-2)=1; % Wpn
end

if param(2)
    tofit(end-1)=1; % Wn
end

if param(3)
    tofit(end)=1; % Gn
end

% Get the coefficients.

res.coeff=[];
res.problem=[];
for cnt=1:length(tofit)
    if tofit(cnt)==1
        res.coeff=[res.coeff temp(cnt)];
    else
        res.problem=[res.problem temp(cnt)];
    end
    res.all=[res.coeff,res.problem];
end
%% Get the numerical values from previous fit.

if (np>1)
    
    
    for cnt=(1:3*(np-1))
        res.problemval(cnt)={F0m1.(temp{cnt})};
    end
    
else
    res.problemval=[];
    
end

res.problemval=[res.problemval ,{problem(1)},{problem(2)}];
res.startval=startpoint;

end




end
